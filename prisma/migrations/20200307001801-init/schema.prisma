generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

/// The underlying table does not contain a unique identifier and can therefore currently not be handled.
// model categories_group_by {
// name String?
// sum  Float?
/// The underlying table does not contain a unique identifier and can therefore currently not be handled.

// @@map("__categories_group_by")
// }

// model transactions_group_by {
// date DateTime?
// sum  Float?
model accounts {
  // @@map("__transactions_group_by")
  // }


  created_at                                          DateTime
  id                                                  String         @id
  initial_amount                                      Float
  legacy_key                                          String
  minimum                                             Float
  name                                                String
  updated_at                                          DateTime
  transactions_accountsTotransactions_from_account_id transactions[] @relation("accountsTotransactions_from_account_id")
  transactions_accountsTotransactions_to_account_id   transactions[] @relation("accountsTotransactions_to_account_id")
}

model categories {
  created_at         DateTime
  id                 String         @id
  legacy_key         String
  name               String
  type               String?
  updated_at         DateTime
  parent_category_id categories?    @relation("categoriesTocategories_parent_category_id")
  categories         categories[]   @relation("categoriesTocategories_parent_category_id")
  transactions       transactions[]
}

model transactions {
  amount          Float
  created_at      DateTime
  date            DateTime
  description     String
  id              String         @id
  pair_id         String?
  updated_at      DateTime
  category_id     categories?
  from_account_id accounts?      @relation("accountsTotransactions_from_account_id")
  paired_with_id  transactions?  @relation("transactionsTotransactions_paired_with_id")
  to_account_id   accounts?      @relation("accountsTotransactions_to_account_id")
  transactions    transactions[] @relation("transactionsTotransactions_paired_with_id")
}
